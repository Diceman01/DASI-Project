sum(DT$pwgtp15<=0)
sum(DT$pwgtp15>0)
system.time({for(i in 1:1000){}})
system.time({for(i in 1:1000){sapply(split(DT$pwgtp15,DT$SEX),mean)}})
system.time({for(i in 1:1000){mean(DT$pwgtp15,by=DT$SEX)}})
system.time({for(i in 1:1000){DT[,mean(pwgtp15),by=SEX]}})
system.time({for(i in 1:1000){tapply(DT$pwgtp15,DT$SEX,mean)}})
system.time({for(i in 1:1000){}})+system.time({for(i in 1:1000){}})
system.time({for(i in 1:1000){mean(DT[DT$SEX==1,]$pwgtp15)}})+system.time({for(i in 1:1000){mean(DT[DT$SEX==2,]$pwgtp15)}})
system.time({for(i in 1:1000){rowMeans(DT)[DT$SEX==1]}})+system.time({for(i in 1:1000){rowMeans(DT)[DT$SEX==2]}})
source("http://www.openintro.org/stat/data/cdc.R")
str(cdc)
sum(cdc$gender == m)
sum(cdc$gender == "m")
sum(cdc$gender == "f")
summary(cdc)
?table
table(cdc$genhlth)
table(cdc$genhlth)/nrows(cdc)
table(cdc$genhlth)/nRows(cdc)
table(cdc$genhlth)/rows(cdc)
?nrows
?nrow
table(cdc$genhlth)/nrow(cdc)
gender_smokers = table(cdc$gender,cdc$smoke100)
gender_smokers
mosaicplot(gender_smokers)
cdc[,weight]
cdc[,"weight"]
?=
under23_and_smoke <- subset(cdc, cdc$age < 23 & cdc$smoke100 == 1)
barplot(table(cdc$smoke100))
smoke <- table(cdc$smoke100)
barplot(smoke)
boxplot(cdc$height)
summary(cdc$height)
boxplot(cdc$height ~ cdc$gender)
bmi <- (cdc$weight / cdc$height^2) * 703
boxplot(bmi ~ cdc$genhlth)
hist(cdc$age)
hist(bmi)
hist(bmi,breaks=50)
str(cdc)
plot(cdc$weight ~ cdc$wtdesire)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github","2f9cc99146351017a4b0")
myapp <- oauth_app("github","2f9cc99146351017a4b0")
dbimon(2,size=10,p=0.56)
dbinom(2,size=10,p=0.56)
dbinom(600,size=1000,p=0.56)
dbinom(60:100,size=100,p=0.56)
sum(dbinom(60:100,size=100,p=0.56))
load(url("http://www.openintro.org/stat/data/kobe.RData"))
head(kobe)
head(kobe,15)
ls()
grep("k",ls())
grep("kobe",ls())
grepl("kobe",ls())
!grepl("kobe",ls())
rm(list = ls()[!grepl("kobe",ls())])
kobe$basket[1:9]
load(url("http://www.openintro.org/stat/data/kobe.RData"))
debug(calc_streak)
kobe_strak <- calc_streak(kobe$basket)
?diff
undebug(calc_streak)
table(kobe_streak)
kobe_streak <- kobe_strak
rm(kobe_strak)
table(kobe_streak)
barplt(table(kobe_streak))
barplot(table(kobe_streak))
kobe_streak
?table
table(kobe$quarter,kobe$basket)
barplot(table(kobe$quarter,kobe$basket))
table(kobe$basket,kobe$quarter)
barplot(table(kobe$basket,kobe$quarter))
barplot(table(kobe_streak))
median(kobe_streak)
?iqr
summarize(kobe_streak)
summarise(kobe_streak)
?summarise
library(dployr)
library(dplyr)
summarise(kobe_streak)
?summarise
summary(kobe_streak)
view(calc_streak)
View(calc_streak)
edit(calc_streak)
?sample
outcomes <- c("hit", "miss")
sample(outcomes, size = 1, replace = TRUE, prob = c(0.45,1-0.45))
sample(outcomes, size = 10, replace = TRUE, prob = c(0.45,1-0.45))
sample(outcomes, size = 100, replace = TRUE, prob = c(0.45,1-0.45))
sum(sample(outcomes, size = 100, replace = TRUE, prob = c(0.45,1-0.45))=="hit")
sum(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45))=="hit")
sum(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45))=="hit")
sum(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45))=="hit")
sum(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45))=="hit")
sum(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45))=="hit")
sum(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45))=="hit")
sum(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45))=="hit")
sum(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45))=="hit")
table(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))
table(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))
table(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))
table(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))
table(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))
edit(calc_streak)
outcomes <- c("H","M")
calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))
barplot(calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45))))
barplot(table(calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))))
barplot(table(calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))))
barplot(table(calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))))
barplot(table(calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))))
barplot(table(calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))))
barplot(table(calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))))
barplot(table(calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))))
barplot(table(calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))))
barplot(table(calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))))
barplot(table(calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))))
barplot(table(calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))))
barplot(table(calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))))
barplot(table(calc_streak(sample(outcomes, size = 1000, replace = TRUE, prob = c(0.45,1-0.45)))))
barplot(table(calc_streak(sample(outcomes, size = 133, replace = TRUE, prob = c(0.45,1-0.45)))))
barplot(table(kobe_streak))
barplot(table(calc_streak(sample(outcomes, size = 133, replace = TRUE, prob = c(0.45,1-0.45)))),table(kobe_streak))
barplot(table(calc_streak(sample(outcomes, size = 133, replace = TRUE, prob = c(0.45,1-0.45)))),table(kobe_streak))
barplot(table(calc_streak(sample(outcomes, size = 133, replace = TRUE, prob = c(0.45,1-0.45)))),table(kobe_streak))
barplot(table(calc_streak(sample(outcomes, size = 133, replace = TRUE, prob = c(0.45,1-0.45)))),table(kobe_streak))
barplot(table(calc_streak(sample(outcomes, size = 133, replace = TRUE, prob = c(0.45,1-0.45)))),table(kobe_streak))
barplot(table(calc_streak(sample(outcomes, size = 133, replace = TRUE, prob = c(0.45,1-0.45)))),table(kobe_streak))
plot(table(calc_streak(sample(outcomes, size = 133, replace = TRUE, prob = c(0.45,1-0.45)))),table(kobe_streak))
barplot(table(calc_streak(sample(outcomes, size = 133, replace = TRUE, prob = c(0.45,1-0.45)))),table(kobe_streak))
load(url("http://bit.ly/dasi_gss_data"))
rm(list = ls[!grepl("gss",ls())])
rm(list = ls()[!grepl("gss",ls())])
load(url("http://bit.ly/dasi_anes_data"))
table(gss$natcrime,gss$race)
barplot(table(gss$natcrime,gss$race))
totals <- table(gss$natcrime,gss$race)
total
totals
totals[,]
totals[,1]
sum(totals[,1])
totals <- rbind(totals,sum(totals[,1:3]))
totals
totals <- totals[1:3,]
totals
str(gss)
snapshot <- cbind(gss$race,gss$natcrime)
snapshot
str(snapshot)
cbind(as.character(gss$race),as.character(gss$natcrime))
snapshot <- cbind(as.character(gss$race),as.character(gss$natcrime))
cbind(as.factor(gss$race),as.factor(gss$natcrime))
snapshot <- cbind(as.factor(gss$race),as.factor(gss$natcrime))
snapshot <- cbind(as.character(gss$race),as.character(gss$natcrime))
factors <- as.factor(snapshot)
factors
str(factors)
factors <- as.factor(snapshot$race, snapshot$natcrime)
str(snapshot)
head(snapshot)
head(snapshot,100)
head(snapshot,1000)
head(snapshot,10000)
head(snapshot,2000)
snapshot[1600:1700,]
load(url("http://www.openintro.org/stat/data/ames.RData"))
str(ames)
area <- ames$Gr.Liv.Area
price <- ames$SalePrice
summary(area)
hist(area)
?iqr
IQR(area)
samp0 <- sample(area,50)
samp1 <- sample(area,50)
samp0 == samp1
summary(samp0)
summary(samp1)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
?hist
hist(sample_means50,breaks=50)
hist(sample_means50,breaks=25)
hist(sample_means50,breaks=65)
summary(sample_means50)
hist(sample_means50)
sample_means10 <- rep(NA, 5000)
sample_means100 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 10)
sample_means10[i] <- mean(samp)
samp <- sample(area, 100)
sample_means100[i] <- mean(samp)
}
hist(sample_means10)
hist(sample_means100)
hist(sample_means10)
par(mfrow = c(3, 1))
xlimits = range(sample_means10)
hist(sample_means10, breaks = 20, xlim = xlimits)
hist(sample_means50, breaks = 20, xlim = xlimits)
hist(sample_means100, breaks = 20, xlim = xlimits)
?[ar]
?par
par(mfrow = c(1, 1))
summary(price)
samp2 <- sample(50,price)
samp2 <- sample(price,50)
hist(samp2)
samp_means50 = rep(NA,5000)
for(i in 1:5000){}
for(i in 1:5000){
samp <- sample(price,50)
samp_means50[i] <- samp
}
warnings()
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 50)
sample_means50[i] <- mean(samp)
}
hist(samp_means50)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(price, 150)
sample_means50[i] <- mean(samp)
}
hist(samp_means50)
rm(list = ls())
load(url("http://www.openintro.org/stat/data/ames.RData"))
population <- ames$Gr.Liv.Area
samp <- sample(population, 60)
mean(samp)
median(samp)
sample_mean <- mean(samp)
se <- sd(samp)/sqrt(60)
lower <- sample_mean - 1.96 * se
upper <- sample_mean + 1.96 * se
c(lower, upper)
mean(population)
median(population)
samp_mean <- rep(NA, 50)
samp_sd <- rep(NA, 50)
n <- 60
for(i in 1:50){
samp <- sample(population, n) # obtain a sample of size n = 60 from the population
samp_mean[i] <- mean(samp)    # save sample mean in ith element of samp_mean
samp_sd[i] <- sd(samp)        # save sample sd in ith element of samp_sd
}
lower <- samp_mean - 1.96 * samp_sd / sqrt(n)
upper <- samp_mean + 1.96 * samp_sd / sqrt(n)
c(lower[1],upper[1])
plot_ci(lower, upper, mean(population))
lower <- samp_mean - 2.33 * samp_sd / sqrt(n); upper <- samp_mean + 2.33 * samp_sd / sqrt(n)
plot_ci(lower, upper, mean(population))
c(lower[1],upper[1])
getwd()
setwd("~/R")
source("init.r")
source("http://bit.ly/dasi_inference")
load(url("http://www.openintro.org/stat/data/atheism.RData"))
n <- 1000
p <- seq(0, 1, 0.01)
me <- 2*sqrt(p*(1 - p)/n)
plot(me ~ p)
me[p == .5]
n <- 2401
p <- seq(0, 1, 0.01)
me <- 2*sqrt(p*(1 - p)/n)
plot(me ~ p)
me[p == .5]
n <- 9604
p <- seq(0, 1, 0.01)
me <- 2*sqrt(p*(1 - p)/n)
plot(me ~ p)
me[p == .5]
us12 = subset(atheism, atheism$nationality == "United States" & atheism$year == "2012")
inference(us12$response, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
(.0634-.0364)/2
source("init.r")
load(url("http://bit.ly/dasi_gss_data"))
str(gss)
focus <- gss[,c("race","natcrime")]
focus
with(focus,plot(race~natcrime)
)
with(focus,plot(natcrime~race))
with(focus,hist(natcrime~race))
with(focus,barplot(natcrime~race))
with(focus,barplot(natcrime, race))
with(focus,barplot(race, natcrime))
?barplot
barplot(table(gss$natcrime,gss$race))
plot(table(gss$natcrime,gss$race))
with(focus,barplot(table(natcrime,race)))
with(focus,plot(natcrime~race))
?write.table
write.table(focus, "focus.txt")
focus
dim(focus)
write.table(focus, "focus.txt", row.names = FALSE)
source("init.r")
setwd(path.dasi)
write.table(focus, "focus.txt", row.names = FALSE)
focus
load(url("http://bit.ly/dasi_gss_data"))
focus <- gss[,c("race","natcrime")]
write.table(focus, "focus.txt", row.names = FALSE)
focus
with(focus,barplot(table(natcrime,race)))
with(focus,plot(natcrime~race))
list.files()
rmarkdown::render("Project.rmd")
install.packages("rmarkdown")
library("rmarkdown")
rmarkdown::render("Project.rmd")
rmarkdown::render("Project.rmd")
rmarkdown::render("Project.rmd")
rmarkdown::render("Project.rmd")
rmarkdown::render("Project.rmd")
rmarkdown::render("Project.rmd")
rmarkdown::render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
install.packages("knitr")
install.packages("knitr")
library(knitr)
render("Project.rmd")
install.packages("rmarkdown")
render("Project.rmd")
library("rmarkdown")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
with(focus,table(natcrime,race))
?subset
subset(focus, c(focus$race = "White", focus$natcrime = "About Right"))
subset(focus, focus$race = "White")
subset(focus, race = "White")
subset(focus, c(race = "White", natcrime = "About Right"))
?which
with(focus,table(natcrime,race))
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
?round
?round
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
?kable
?format
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
?dist
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
with(focus,table(natcrime,race))
with(focus,table(natcrime,race))
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
?pt
?pnorm
pnorm(12,0,0.00723)
pnorm(12,0,0.00723,lower.tail = FALSE)
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
pnorm(12,0,0.00723,lower.tail = FALSE)
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
render("Project.rmd")
